<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/img/**" location="/img/" />
	<resources mapping="/js/**" location="/js/" />
	<resources mapping="/video/**" location="/video/" />
	<resources mapping="/ckeditor/**" location="/ckeditor/" />
	<resources mapping="/ckfinder/**" location="/ckfinder/" />
	<resources mapping="/ckstorage/**" location="/ckstorage/" />
	<resources mapping="/txt/**" location="/txt/" />
	<resources mapping="/upload/**" location="/upload/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="kr.goott.bridge" />
	
	<!-- DataSource 객체 생성 -->
	<beans:bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></beans:property>
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></beans:property>
		<beans:property name="username" value="bridge"></beans:property>
		<beans:property name="password" value="1234"></beans:property>
	</beans:bean>
	
	<!-- 
		MyBatis FrameWork으로 DB연동하기 위해서
		sqlSessionFactoryBean 객체, sqlSessionTemplate 객체를 생성한다. 
	-->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="mapperLocations">
			<beans:list>
				<!-- classpath 쓰는곳 -->
				<!-- <beans:value>classpath:kr/goott/web/board/mapper/*.xml</beans:value> -->
				<beans:value>classpath:kr/goott/bridge/member/mapper/*.xml</beans:value>
				<beans:value>classpath:kr/goott/bridge/deTailPage/mapper/*.xml</beans:value>
				<beans:value>classpath:kr/goott/bridge/list/mapper/*.xml</beans:value>
				<beans:value>classpath:kr/goott/bridge/project/mapper/*.xml</beans:value>
				<beans:value>classpath:kr/goott/bridge/mypage/mapper/*.xml</beans:value>
				<beans:value>classpath:kr/goott/bridge/payment/mapper/*.xml</beans:value>
				<beans:value>classpath:kr/goott/bridge/admin/mapper/*.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"></beans:constructor-arg>
	</beans:bean>
	
	<!-- 메일 인증 start  
		username에  <google 계정>
		password에  <google 비밀번호>
		google 계정 로그인한 후 -> 보안 -> 보안 수준이 낮은 앱 액세스 허용으로 변경하기. 
	-->
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com"/>
		<beans:property name="port" value="587"/>
		<beans:property name="username" value="junhogg007@gmail.com"/>
		<beans:property name="password" value="8950*qwer"/>
		<beans:property name="defaultEncoding" value="UTF-8"/>
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	<!-- 메일 인증 end -->
	
	<!-- jdbcTemplate 객체생성 -->
	<beans:bean name="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>
	
	<!-- 트랜잭션 -->
	<beans:bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:constructor-arg index="0" ref="dataSource"></beans:constructor-arg>
	</beans:bean>
</beans:beans>
